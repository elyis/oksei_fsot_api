// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using oksei_fsot_api.src.Infrastructure.Data;

#nullable disable

namespace oksei_fsot_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231009163225_test6")]
    partial class test6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.CriterionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LowerBound")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UpperBound")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Criterions");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.EvaluatedAppraiserModel", b =>
                {
                    b.Property<Guid>("EvaluatedId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AppraiserId")
                        .HasColumnType("TEXT");

                    b.HasKey("EvaluatedId", "AppraiserId");

                    b.HasIndex("AppraiserId");

                    b.ToTable("EvaluatedAppraiserModel");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.MarkModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CriterionId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EvaluatedAppraiserAppraiserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EvaluatedAppraiserEvaluatedId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CriterionId");

                    b.HasIndex("EvaluatedAppraiserEvaluatedId", "EvaluatedAppraiserAppraiserId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("LastEvaluationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("Token");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.EvaluatedAppraiserModel", b =>
                {
                    b.HasOne("oksei_fsot_api.src.Domain.Models.UserModel", "Appraiser")
                        .WithMany()
                        .HasForeignKey("AppraiserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oksei_fsot_api.src.Domain.Models.UserModel", "Evaluated")
                        .WithMany("UserAppraisers")
                        .HasForeignKey("EvaluatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appraiser");

                    b.Navigation("Evaluated");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.MarkModel", b =>
                {
                    b.HasOne("oksei_fsot_api.src.Domain.Models.CriterionModel", "Criterion")
                        .WithMany("Marks")
                        .HasForeignKey("CriterionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oksei_fsot_api.src.Domain.Models.EvaluatedAppraiserModel", "EvaluatedAppraiser")
                        .WithMany()
                        .HasForeignKey("EvaluatedAppraiserEvaluatedId", "EvaluatedAppraiserAppraiserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criterion");

                    b.Navigation("EvaluatedAppraiser");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.CriterionModel", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("oksei_fsot_api.src.Domain.Models.UserModel", b =>
                {
                    b.Navigation("UserAppraisers");
                });
#pragma warning restore 612, 618
        }
    }
}
